# Thomas Merkel <tm@core.io>

##################################################################
if [[ ${EUID} == 0 ]] ; then
	return
fi
##################################################################

test -x "$(type -p setterm)" && {
	setterm -blank 0 -blength 0 2> /dev/null;
}

if [[ ! "$TERM" =~ "screen" ]]; then
	## ...
	echo 
	
	## system information
	echo -e "${_color_blue}* ${_color_reset}${_color_bold}uname${_color_reset}"; uname -snrmp; echo
	
	## uptime (records)
	if type -p uprecords >/dev/null 2>&1; then
		echo -e "${_color_blue}* ${_color_reset}${_color_bold}uptime records${_color_reset}"; uprecords -m 3 -s; echo
	else
		echo -e "${_color_blue}* ${_color_reset}${_color_bold}uptime${_color_reset}"; uptime | sed "s/^ //"; echo
	fi

	# show gentoo news if available
	if type -p eselect >/dev/null 2>&1; then
		# slow eselect news workaround
		if [ -s "/var/lib/gentoo/news/news-gentoo.unread" ]; then
			echo -e "${_color_blue}* ${_color_reset}${_color_bold}gentoo news${_color_reset}"; eselect news read new 2>/dev/null; echo
		fi
	fi

	## show who is logged on
	if ! who --count | grep -q users=0; then
		echo -e "${_color_blue}* ${_color_reset}${_color_bold}who${_color_reset}"; who -Hu; echo
	fi

	## show tasks from taskwarrior if available
	if type -p task >/dev/null 2>&1; then
		echo -e "${_color_blue}* ${_color_reset}${_color_bold}tasks${_color_reset}"; task +DUETODAY or +OVERDUE list rc.verbose=label; echo
	fi
fi

## fortune on every login
type -p fortune >/dev/null 2>&1 && {
	echo -e "${_color_blue}* ${_color_reset}${_color_bold}fortune${_color_reset}"; fortune -s; echo
}

# vim:ft=sh
